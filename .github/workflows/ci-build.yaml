name: CI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4️⃣ Wait for Postgres
      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..10}; do
            nc -z localhost 5432 && echo "PostgreSQL is ready!" && break
            echo "PostgreSQL not ready yet..."
            sleep 5
          done

      # 5️⃣ Set environment variables
      - name: Set environment variables
        run: |
          echo "DATABASE_URI=postgresql://postgres:postgres@localhost:5432/postgres" >> $GITHUB_ENV
          echo "FLASK_APP=service:app" >> $GITHUB_ENV

      # 6️⃣ Run linting
      - name: Run lint checks
        run: |
          pip install pylint
          pylint service --exit-zero

      # 7️⃣ Run tests
      - name: Run unit tests
        run: |
          pip install nose coverage factory-boy
          nosetests -v --with-spec --spec-color --with-coverage --cover-package=service

      # 8️⃣ Upload coverage results (optional)
      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: .coverage
